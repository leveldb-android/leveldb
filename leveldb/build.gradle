apply plugin: 'com.android.library'

Properties propertiesLLDB = new Properties()
File propFileDB  ='gradle.properties' as File
propertiesLLDB.load(propFileDB.newDataInputStream())

def lldbVersion =propertiesLLDB.getProperty("VERSION_NAME")
android {
    compileSdkVersion 26

    sourceSets.main.jni.srcDirs = [] // now, AS will not try to compile your source files
    sourceSets.main.jniLibs.srcDirs = ['src/main/libs']

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 26
        versionCode 1
        versionName "${lldbVersion}"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {

    compile 'com.android.support:support-annotations:27.0.2'
}




apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'



group='io.leveldb.android'
def  artifactIdDB ='leveldb'
version = lldbVersion
install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId "io.leveldb.android"
            artifactId "${artifactIdDB}"
            version "${lldbVersion}"
            name 'leveldb' // pom.project.name must be same as bintray.pkg.name
            url 'https://github.com/leveldb-android/leveldb.git'
            inceptionYear '2018' // HARDCODED
            licenses {
                license { // HARDCODED
                    name 'BSD'
                    distribution 'repo'
                }
            }
            scm {
                connection 'https://github.com/leveldb-android/leveldb.git'
                developerConnection 'https://github.com/leveldb-android/leveldb.git'
                url 'https://github.com/leveldb-android/leveldb'
            }
        }
    }
}

Properties properties = new Properties()
File propFile = "${System.properties['user.home']}${File.separator}.gradle${File.separator}bintray.properties" as File
properties.load(propFile.newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "leveldb-android"
        name = "${artifactIdDB}"
        websiteUrl = "https://github.com/leveldb-android/leveldb"
        vcsUrl = "https://github.com/leveldb-android/leveldb.git"
        publish = true
        override = true
        version {
            name ="${lldbVersion}" //Bintray logical version name
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

